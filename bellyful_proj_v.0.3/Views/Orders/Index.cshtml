@using System.Globalization
@model IEnumerable<bellyful_proj_v._0._3.ViewModels.OrderIndexViewModel>


@{
    ViewData["Title"] = "Orders";
    TimeSpan timeSpan = TimeSpan.Zero;

    string GetTime(DateTime? dateTime)
    {
        if (dateTime == null) { return "Null"; }

        if (DateTime.Now.Day != dateTime.Value.Day)
        {//不在同一天


            if (DateTime.Now.Day - dateTime.Value.Day ==1)
            {
                return string.Format("yday {0}", dateTime.Value.ToString("HH:mm tt", new CultureInfo("en-US")));
            }
            return string.Format("{0}", dateTime.Value.ToString("dd/MM/yy HH:mm", new CultureInfo("en-US")));

        }
        else
        {//在同一天
            timeSpan = DateTime.Now - dateTime.Value;//20：00 == 27

            //如果相差大于1小时 显示具体时间
            if (timeSpan >= TimeSpan.FromHours(1)) { return string.Format("{0}", dateTime.Value.ToString("HH:mm tt", new CultureInfo("en-US"))); }
            //如果相差大于1分钟 显示分钟数
            if (timeSpan > TimeSpan.FromMinutes(1)) { return string.Format("{0:N0} mins ago", timeSpan.TotalMinutes); }
            //其他 显示1分钟
            return "1 min ago";
        }
    }
}
<h1>Orders</h1>

<pre style="color: gray">
 1. 下订单会自动扣除库存(任意类别餐库存为0，则无法下订单);
 2. Push 订单会记录Push时间，覆盖掉PlacedTime
 3. 取消订单会返回库存。
 4. 只有状态为：Created 和 Pushed 的订单可以取消。

日期显示：
  1小时以前：x mins ago
  1小时以上: XX:XX PM
  昨天的时间： yday + XX:XX PM
  超过昨天 ： day/month/year + XX:XX PM
</pre>


<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead class="thead-dark">
        <tr>

            <th scope="col">No.</th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.RIdName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VIdName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PlacedTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AssignedTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PickedUpTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeliveredTime)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            <tr>
                <td>
                    @order.OrderId
                </td>

                @switch (order.StatusId)
                {
                    case 3:// Created ;
                        <td>
                            <span style="background-color: rgb(153, 204, 15); border-radius:15px; padding: 7px"> @order.Status</span>
                        </td>
                        break;
                    case 4:// Pushed ;
                        <td>
                            <span style="background-color: rgb(153, 204, 255); border-radius:15px; padding: 7px"> @order.Status</span>
                        </td>
                        break;
                    case 5://Assigned
                        <td>
                            <span style="background-color: rgb(241,238,103); border-radius:15px; padding: 7px"> @order.Status</span>
                        </td>
                        break;
                    case 6:// Delivering
                        <td>
                            <span style="  background-color: rgb(241,126,97); border-radius:15px; padding: 7px"> @order.Status</span>
                        </td>
                        break;
                    case 2:// Completed
                        <td>
                            <span style="background-color:  rgb(87, 255, 255); border-radius:15px; padding: 7px"> @order.Status</span>
                        </td>
                        break;
                    case 1:// Cancelled
                        <td>
                            <span style="background-color:   rgb(133, 133, 133); border-radius:15px; padding: 7px"> @order.Status</span>
                        </td>
                        break;
                    default:
                        <td>
                            @order.Status
                        </td>
                        break;
                }

                <td>
                    @order.RIdName
                </td>

                @if (order.VIdName == null)
                {
                    <td> Null </td> }
                else
                {
                    <td>   @order.VIdName</td>}

                <td> @GetTime(order.PlacedTime)</td>
                <td> @GetTime(order.AssignedTime)</td>
                <td> @GetTime(order.PickedUpTime)</td>
                <td> @GetTime(order.DeliveredTime)</td>
                <td>
                    @if (order.StatusId == 3)
                    {
                        <a asp-action="Push" asp-route-OrderId="@order.OrderId">Push</a>
                        <span> | </span>
                    }
                    @if (order.StatusId == 3 || order.StatusId == 4)
                    {
                        <a asp-action="Cancel" asp-route-OrderId="@order.OrderId">Cancel</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

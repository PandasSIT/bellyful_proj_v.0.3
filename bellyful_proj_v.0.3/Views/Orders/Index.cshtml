@using System.Globalization
@model IEnumerable<bellyful_proj_v._0._3.ViewModels.OrderIndexViewModel>


@{
    ViewData["Title"] = "Order";
    TimeSpan timeSpan = TimeSpan.Zero;

    string GetTime(DateTime? dateTime)
    {
        if (dateTime == null) { return "Null"; }

        if (DateTime.Now.Day != dateTime.Value.Day)
        {//不在同一天


            if (DateTime.Now.Day - dateTime.Value.Day == 1)
            {
                return string.Format("yday {0}", dateTime.Value.ToString("HH:mm tt", new CultureInfo("en-US")));
            }
            return string.Format("{0}", dateTime.Value.ToString("dd/MM HH:mm", new CultureInfo("en-US")));

        }
        else
        {//在同一天
            timeSpan = DateTime.Now - dateTime.Value;//20：00 == 27

            //如果相差大于1小时 显示具体时间
            if (timeSpan >= TimeSpan.FromHours(1)) { return string.Format("{0}", dateTime.Value.ToString("HH:mm tt", new CultureInfo("en-US"))); }
            //如果相差大于1分钟 显示分钟数
            if (timeSpan > TimeSpan.FromMinutes(1)) { return string.Format("{0:N0} mins ago", timeSpan.TotalMinutes); }
            //其他 显示1分钟
            return "1 min ago";
        }
    }
}

@*<pre style="color: gray">
     1. 下订单会自动扣除库存(任意类别餐库存为0，则无法下订单);
     2. Push 订单会记录Push时间，覆盖掉PlacedTime
     3. 取消订单会返回库存。
     4. 只有状态为：Created 和 Pushed 的订单可以取消。

    日期显示：
      1小时以前：x mins ago
      1小时以上: XX:XX PM
      昨天的时间： yday + XX:XX PM
      超过昨天 ： day/month/year + XX:XX PM

    订单排序：
    Delivering > Assigned > Pushed > Create > Completed > Cancelled
    同状态按照 DeliveedTime > PickedUpTime > AssignedTime > PlacedTime 排序
    </pre>*@


<p>
    <a onclick="spinerLoading(this)" asp-action="Create" class="btn btn-info">New </a>
    @*@if (Model.Any(x => x.StatusId == 3))
        {
            <a asp-action="PushAll">Push All</a>
        }*@

</p>

<table id="bellyful-order" class=" hover table nowrap ">
    <thead>
        <tr>
            <th>No</th>
            <th>Status</th>
            <th>@Html.DisplayNameFor(model => model.RIdName)</th>
            <th>DeliveryMan</th>
            <th>@Html.DisplayNameFor(model => model.PlacedTime)</th>
            <th>@Html.DisplayNameFor(model => model.AssignedTime)</th>
            <th>@Html.DisplayNameFor(model => model.PickedUpTime)</th>
            <th>@Html.DisplayNameFor(model => model.DeliveredTime)</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            @if (order.StatusId == 2 || order.StatusId == 1)
            {
                <tr style="background-color:rgba(115, 115, 115,0.1);color:silver" class="text-black-50">
                    <td data-label="Order Id.">
                        @order.OrderId
                    </td>
                    <td data-label="Status">
                        @switch (order.StatusId)
                        {

                            case 2:// Completed
                                <span style="background-color:  rgb(211, 255, 253); color: grey; border-radius:15px; padding:1px 7px">Completed</span>
                                break;
                            case 1:// Cancelled
                                <span style="background-color:   rgb(222, 222, 222);   border-radius:15px; padding:1px 7px">Cancelled</span>
                                break;
                            default:
                                break;
                        }
                    </td>
                    <td data-label=@Html.DisplayNameFor(model => model.RIdName)>
                        @order.RIdName
                    </td>

                    @if (order.VIdName == null)
                    {
                        <td data-label=@Html.DisplayNameFor(model => model.VIdName)> Null </td>
                    }
                    else
                    {
                        <td data-label=@Html.DisplayNameFor(model => model.VIdName)>   @order.VIdName</td>
                    }

                    <td data-label=@Html.DisplayNameFor(model => model.PlacedTime)> @GetTime(order.PlacedTime)</td>
                    <td data-label=@Html.DisplayNameFor(model => model.AssignedTime)> @GetTime(order.AssignedTime)</td>
                    <td data-label=@Html.DisplayNameFor(model => model.PickedUpTime)> @GetTime(order.PickedUpTime)</td>
                    <td data-label=@Html.DisplayNameFor(model => model.DeliveredTime)> @GetTime(order.DeliveredTime)</td>
                    <td data-label="Action">
                        <div class="action-btns">-</div>
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td data-label="Order No.">
                        @order.OrderId
                    </td>
                    <td data-label="Status">
                        @switch (order.StatusId)
                        {
                            case 3:// Created ;
                                <span style="background-color: rgba(153, 204, 15,0.6); border-radius:15px; padding:1px 7px">Created</span>
                                break;
                            case 4:// Pushed ;
                                <span style="background-color: rgba(153, 204, 255,0.6); border-radius:15px; padding:1px 7px">Pushed</span>
                                break;
                            case 5://Assigned
                                <span style="background-color: rgba(241,238,103,0.6); border-radius:15px; padding:1px 7px">Taken</span>
                                break;
                            case 6:// Delivering
                                <span style="  background-color: rgba(241,126,97,0.6); border-radius:15px; padding:1px 7px">Delivering</span>
                                break;
                            default:
                                break;
                        }
                    </td>
                    <td data-label=@Html.DisplayNameFor(model => model.RIdName)>
                        @order.RIdName
                    </td>

                    @if (order.VIdName == null)
                    {
                        <td data-label=@Html.DisplayNameFor(model => model.VIdName)> Null </td>
                    }
                    else
                    {
                        <td data-label=@Html.DisplayNameFor(model => model.VIdName)>   @order.VIdName</td>
                    }

                    <td data-label=@Html.DisplayNameFor(model => model.PlacedTime)> @GetTime(order.PlacedTime)</td>
                    <td data-label=@Html.DisplayNameFor(model => model.AssignedTime)> @GetTime(order.AssignedTime)</td>
                    <td data-label=@Html.DisplayNameFor(model => model.PickedUpTime)> @GetTime(order.PickedUpTime)</td>
                    <td data-label=@Html.DisplayNameFor(model => model.DeliveredTime)> @GetTime(order.DeliveredTime)</td>
                    <td>
                        <div class="action-btns">

                            @if (order.StatusId == 3)
                            {
                                <a onclick="spinerLoading(this)" style="background-color:lightblue;" class="btn text-black-50" asp-action="Push" asp-route-OrderId="@order.OrderId"><b>Push</b></a>

                            }
                            @if (order.StatusId == 3 || order.StatusId == 4)
                            {
                                <a onclick="spinerLoading(this)" style="background-color:lightpink;" class="btn text-black-50" asp-action="Cancel" asp-route-OrderId="@order.OrderId"><i class="fa fa-times"></i></a>
                            }
                            else
                            {
                                <div class="action-btns">-</div>
                            }

                        </div>
                    </td>
                </tr>
            }

        }
    </tbody>
</table>







@section Scripts{
    <script>


        $(document).ready(function () {


            var height = window.screen.height

            if (height > 1050) {
                $('#bellyful-order').DataTable({
                    "columnDefs": [
                        { "width": "5%", "targets": 0 },//1
                        { "width": "10%", "targets": 1 },//2
                        { "width": "14%", "targets": 2 },//3
                        { "width": "12.5%", "targets": 3 },//4
                        { "width": "9%", "targets": 4 },//5
                        { "width": "12%", "targets": 5 },//6
                        { "width": "12%", "targets": 6 },//7
                        { "width": "13%", "targets": 7 },//8
                         { "width": "13%", "targets": 8 }//9



                    ],
                    serverSide: false,
                    paging: false,
                    scrollY: 680,
                    info: false,
                    // "autoWidth": false,
                    // "ordering": false,
                    "order": [],
                    //stateSave: true
                });
            } else if (height > 930) {
                $('#bellyful-order').DataTable({
                    serverSide: false,
                    paging: false,
                    scrollY: 580,
                    info: false,
                    "ordering": false,
                    "order": [],
                    ///  stateSave: true
                });
            }
            else if (height > 735) {
                $('#bellyful-order').DataTable({
                    serverSide: false,
                    paging: false,
                    scrollY: 550,
                    info: false,
                    "ordering": false,
                    "order": [],
                    ///  stateSave: true
                });
            } else {

                $('#bellyful-order').DataTable({
                    serverSide: false,
                    paging: false,
                    scrollY: 450,
                    info: false,
                    "ordering": false,
                    "order": [],
                    //   stateSave: true
                });
            }
        });
    </script>
}